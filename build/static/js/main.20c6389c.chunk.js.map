{"version":3,"sources":["MyEpic.js","App.js","index.js"],"names":["MyEpic","props","state","activeStory","avatar","onStoryChange","bind","e","this","setState","currentTarget","dataset","story","console","log","connect","subscribe","detail","hasOwnProperty","type","JSON","stringify","data","fetchedUser","geodata","lat","lng","long","token","access_token","getFriends","request_id","friends","response","items","send","sendPromise","then","catch","error","tabbar","onClick","selected","data-story","text","label","id","activePanel","src","size","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"4mBA6HeA,G,0BAlHb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,YAAa,OACbC,OAAQ,MAGV,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBARJ,E,2EAYJC,GACbC,KAAKC,SAAS,CAAEN,YAAaI,EAAEG,cAAcC,QAAQC,U,0CAGlC,IAAD,OAClBC,QAAQC,IAAI,uBACZC,IAAQC,WAAU,SAACT,GACjB,GAAIA,EAAEU,OAAOC,eAAe,QAC1B,OAAQX,EAAEU,OAAOE,MACf,IAAK,4BACHN,QAAQC,IAAI,mBAAqBM,KAAKC,UAAUd,EAAEU,OAAOK,OACzD,EAAKb,SAAS,CAAEc,YAAahB,EAAEU,OAAOK,OACtC,MACF,IAAK,wBACH,EAAKb,SAAS,CACZe,QAAS,CACPC,IAAKlB,EAAEU,OAAOK,KAAKG,IACnBC,IAAKnB,EAAEU,OAAOK,KAAKK,QAGvB,MACF,IAAK,8BACH,EAAKlB,SAAS,CACZmB,MAAOrB,EAAEU,OAAOK,KAAKO,eAEvB,EAAKC,aACL,MACF,IAAK,8BAE8B,SAA7BvB,EAAEU,OAAOK,KAAKS,YAChB,EAAKtB,SAAS,CAAEuB,QAASzB,EAAEU,OAAOK,KAAKW,SAASC,YAQ1DnB,IAAQoB,KAAK,sBAAuB,IAEpCpB,IACGqB,YAAY,uBACZC,MAAK,SAAAf,GAEJT,QAAQC,IAAI,mBAAqBM,KAAKC,UAAUC,OAEjDgB,OAAM,SAAAC,S,+BAOT,OACE,kBAAC,IAAD,CAAMpC,YAAaK,KAAKN,MAAMC,YAAaqC,OACzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAASjC,KAAKH,cACdqC,SAAqC,SAA3BlC,KAAKN,MAAMC,YACrBwC,aAAW,OACXC,KAAK,iEACN,kBAAC,IAAD,OACD,kBAAC,IAAD,CACEH,QAASjC,KAAKH,cACdqC,SAAqC,YAA3BlC,KAAKN,MAAMC,YACrBwC,aAAW,UACXC,KAAK,WACN,kBAAC,IAAD,OACD,kBAAC,IAAD,CACEH,QAASjC,KAAKH,cACdqC,SAAqC,SAA3BlC,KAAKN,MAAMC,YACrBwC,aAAW,OACXE,MAAM,KACND,KAAK,kCACN,kBAAC,IAAD,SAGH,kBAAC,IAAD,CAAME,GAAG,OAAOC,YAAY,QAC1B,kBAAC,IAAD,CAAOD,GAAG,QACR,kBAAC,IAAD,aACE,kBAAC,IAAD,gBACatC,KAAKN,MAAMqB,aAExB,kBAAC,IAAD,CAAQyB,IAAI,8EAA6EC,KAAM,OAGrG,kBAAC,IAAD,CAAMH,GAAG,UAAUC,YAAY,WAC7B,kBAAC,IAAD,CAAOD,GAAG,WACR,kBAAC,IAAD,kBAGJ,kBAAC,IAAD,CAAMA,GAAG,OAAOC,YAAY,QAC1B,kBAAC,IAAD,CAAOD,GAAG,QACR,kBAAC,IAAD,oB,GA1GSI,IAAMC,YCJ3B,SAASC,IACP,OAAO,IAAIpD,EAgBbqD,IAASC,OAAO,kBAACF,EAAD,MAASG,SAASC,eAAe,SAElCJ,QChBfrC,IAAQoB,KAAK,gBAQbkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.20c6389c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Div,View, Panel, PanelHeader, Group, List, Cell,Tabbar,TabbarItem,Epic,Button, Avatar} from '@vkontakte/vkui';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\nimport connect from '@vkontakte/vk-connect';\n\nclass MyEpic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeStory: 'wish',\n      avatar: null\n    };\n\n    this.onStoryChange = this.onStoryChange.bind(this);\n\n  }\n\n  onStoryChange (e) {\n    this.setState({ activeStory: e.currentTarget.dataset.story })\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount()\");\n    connect.subscribe((e) => {\n      if (e.detail.hasOwnProperty('type')) {\n        switch (e.detail.type) {\n          case 'VKWebAppGetUserInfoResult':\n            console.log(\"e.detail.data = \" + JSON.stringify(e.detail.data));\n            this.setState({ fetchedUser: e.detail.data });\n            break;\n          case 'VKWebAppGeodataResult':\n            this.setState({ \n              geodata: {\n                lat: e.detail.data.lat,\n                lng: e.detail.data.long\n              }\n            });\n            break;\n          case 'VKWebAppAccessTokenReceived':\n            this.setState({\n              token: e.detail.data.access_token\n            });\n            this.getFriends();\n            break;\n          case 'VKWebAppCallAPIMethodResult':\n            debugger;\n            if (e.detail.data.request_id === '34bc') {\n              this.setState({ friends: e.detail.data.response.items });\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    });\n    connect.send('VKWebAppGetUserInfo', {});\n\n    connect\n      .sendPromise('VKWebAppGetUserInfo')\n      .then(data => {\n        // Обработка события в случае успеха\n        console.log(\"e.detail.data = \" + JSON.stringify(data));\n      })\n      .catch(error => {\n        // Обработка события в случае ошибки\n      });\n  }\n\n  render () {\n\n    return (\n      <Epic activeStory={this.state.activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'wish'}\n            data-story=\"wish\"\n            text=\"Мои желания\"\n          ><Icon28Newsfeed /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'friends'}\n            data-story=\"friends\"\n            text=\"friends\"\n          ><Icon28Search /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'feed'}\n            data-story=\"feed\"\n            label=\"12\"\n            text=\"Лента\"\n          ><Icon28Messages /></TabbarItem>\n        </Tabbar>\n      }>\n        <View id=\"wish\" activePanel=\"wish\">\n          <Panel id=\"wish\">\n            <PanelHeader>Wish</PanelHeader>\n              <Div>\n                  JSON3 = {this.state.fetchedUser} \n              </Div>\n              <Avatar src=\"https://sun9-11.userapi.com/c846420/v846420985/1526cd/YmiB_KSW1Q8.jpg?ava=1\"size={80}/>\n          </Panel>\n        </View>\n        <View id=\"friends\" activePanel=\"friends\">\n          <Panel id=\"friends\">\n            <PanelHeader>Friends</PanelHeader>\n          </Panel>\n        </View>\n        <View id=\"feed\" activePanel=\"feed\">\n          <Panel id=\"feed\">\n            <PanelHeader>Feed</PanelHeader>\n          </Panel>\n        </View>\n      </Epic>\n    )\n  }\n}\n\n// <MyEpic />\nexport default MyEpic; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { View, Panel, PanelHeader, Group, List, Cell } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport MyEpic from './MyEpic.js';\n\nfunction App () {\n  return new MyEpic();\n  // return (\n  //   <View activePanel=\"main\">\n  //     <Panel id=\"main\">\n  //       <PanelHeader>VKUI</PanelHeader>\n  //       <Group title=\"Items\">\n  //         <List>\n  //           <Cell>Hello</Cell>\n  //           <Cell>World</Cell>\n  //         </List>\n  //       </Group>\n  //     </Panel>\n  //   </View>\n  // );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App;","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}