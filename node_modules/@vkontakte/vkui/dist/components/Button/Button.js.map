{"version":3,"sources":["../../../src/components/Button/Button.tsx"],"names":["Button","props","platform","className","size","mode","stretched","align","children","before","after","getRootRef","Component","restProps","href","defaultProps","stopPropagation"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAiBA,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,CAACC,KAAD,EAAwB;AAAA;;AACrE,MAAMC,QAAQ,GAAG,2BAAjB;AADqE,MAE7DC,SAF6D,GAE6CF,KAF7C,CAE7DE,SAF6D;AAAA,MAElDC,IAFkD,GAE6CH,KAF7C,CAElDG,IAFkD;AAAA,MAE5CC,IAF4C,GAE6CJ,KAF7C,CAE5CI,IAF4C;AAAA,MAEtCC,SAFsC,GAE6CL,KAF7C,CAEtCK,SAFsC;AAAA,MAE3BC,KAF2B,GAE6CN,KAF7C,CAE3BM,KAF2B;AAAA,MAEpBC,QAFoB,GAE6CP,KAF7C,CAEpBO,QAFoB;AAAA,MAEVC,MAFU,GAE6CR,KAF7C,CAEVQ,MAFU;AAAA,MAEFC,KAFE,GAE6CT,KAF7C,CAEFS,KAFE;AAAA,MAEKC,UAFL,GAE6CV,KAF7C,CAEKU,UAFL;AAAA,MAEiBC,SAFjB,GAE6CX,KAF7C,CAEiBW,SAFjB;AAAA,MAE+BC,SAF/B,0CAE6CZ,KAF7C;AAIrE,SAAO,6BAAC,iBAAD,6BAAcY,SAAd;AAAyB,IAAA,SAAS,EAAE,0BAAW,2BAAa,QAAb,EAAuBX,QAAvB,CAAX,EAA6CC,SAA7C,qFAC1BC,IAD0B,GACjB,IADiB,oEAEzBC,IAFyB,GAEhB,IAFgB,oEAGzBE,KAAK,IAAI,QAHgB,GAGH,IAHG,8CAIxC,aAJwC,EAIxBD,SAJwB,gBAApC;AAKH,IAAA,UAAU,EAAEK,UALT;AAKqB,IAAA,SAAS,EAAEE,SAAS,CAACC,IAAV,GAAiB,GAAjB,GAAuBF;AALvD,MAML;AAAK,IAAA,SAAS,EAAC;AAAf,KACGH,MAAM,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAiCA,MAAjC,CADb,EAEGD,QAAQ,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCA,QAAlC,CAFf,EAGGE,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAgCA,KAAhC,CAHZ,CANK,CAAP;AAYD,CAhBD;;AAkBAV,MAAM,CAACe,YAAP,GAAsB;AACpBV,EAAAA,IAAI,EAAE,SADc;AAEpBO,EAAAA,SAAS,EAAE,QAFS;AAGpBR,EAAAA,IAAI,EAAE,GAHc;AAIpBE,EAAAA,SAAS,EAAE,KAJS;AAKpBU,EAAAA,eAAe,EAAE;AALG,CAAtB;eAQehB,M","sourcesContent":["import React, { FunctionComponent, ReactNode, ElementType, ButtonHTMLAttributes } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Tappable from '../Tappable/Tappable';\nimport { HasAlign, HasRootRef } from '../../types/props';\nimport usePlatform from '../../hooks/usePlatform';\n\nexport interface VKUIButtonProps extends HasAlign {\n  mode?: 'primary' | 'secondary' | 'tertiary' | 'outline' | 'commerce' | 'destructive' | 'overlay_primary' | 'overlay_secondary' | 'overlay_outline';\n  size?: 'm' | 'l' | 'xl';\n  stretched?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n}\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, VKUIButtonProps {\n  Component?: ElementType;\n  stopPropagation?: boolean;\n  href?: string;\n  target?: string;\n}\n\nconst Button: FunctionComponent<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  const { className, size, mode, stretched, align, children, before, after, getRootRef, Component, ...restProps } = props;\n\n  return <Tappable {...restProps} className={classNames(getClassName('Button', platform), className, {\n    [`Button--sz-${size}`]: true,\n    [`Button--lvl-${mode}`]: true,\n    [`Button--aln-${align || 'center'}`]: true,\n    ['Button--str']: stretched,\n  })} getRootRef={getRootRef} Component={restProps.href ? 'a' : Component}>\n    <div className=\"Button__in\">\n      {before && <div className=\"Button__before\">{before}</div>}\n      {children && <div className=\"Button__content\">{children}</div>}\n      {after && <div className=\"Button__after\">{after}</div>}\n    </div>\n  </Tappable>;\n};\n\nButton.defaultProps = {\n  mode: 'primary',\n  Component: 'button',\n  size: 'm',\n  stretched: false,\n  stopPropagation: true,\n};\n\nexport default Button;\n"],"file":"Button.js"}