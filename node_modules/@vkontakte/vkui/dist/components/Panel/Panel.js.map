{"version":3,"sources":["../../../src/components/Panel/Panel.tsx"],"names":["Panel","panel","props","id","className","centered","children","insets","platform","separator","restProps","tabbarPadding","context","hasTabbar","tabbarHeight","paddingBottom","bottom","Component","PropTypes","string","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;IAiBMA,K;;;;;;;;;;;;sCAec;AAChB,aAAO;AACLC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC;AADb,OAAP;AAGD;;;6BAEQ;AAAA,wBAC8E,KAAKD,KADnF;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBC,QADtB,eACsBA,QADtB;AAAA,UACgCC,MADhC,eACgCA,MADhC;AAAA,UACwCC,QADxC,eACwCA,QADxC;AAAA,UACkDC,SADlD,eACkDA,SADlD;AAAA,UACgEC,SADhE;AAEP,UAAMC,aAAa,GAAG,KAAKC,OAAL,CAAaC,SAAb,GAAyBC,uBAAzB,GAAwC,CAA9D;AAEA,aACE,+DAASJ,SAAT;AAAoB,QAAA,SAAS,EAAE,yBAAW,2BAAa,OAAb,EAAsBF,QAAtB,CAAX,EAA4CJ,SAA5C,EAAuD;AACpF,6BAAmBC;AADiE,SAAvD;AAA/B,UAGE,6BAAC,cAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAE;AAClCU,UAAAA,aAAa,EAAE,sBAAUR,MAAM,CAACS,MAAjB,IAA2BT,MAAM,CAACS,MAAP,GAAgBL,aAA3C,GAA2D;AADxC;AAApC,SAGE;AAAK,QAAA,SAAS,EAAC;AAAf,QAHF,EAIGF,SAAS,IAAI,6BAAC,kBAAD;AAAW,QAAA,SAAS,EAAC;AAArB,QAJhB,EAKGJ,QAAQ,GAAG;AAAK,QAAA,SAAS,EAAC;AAAf,SAAkCC,QAAlC,CAAH,GAAuDA,QALlE,EAME;AAAK,QAAA,SAAS,EAAC;AAAf,QANF,CAHF,CADF;AAcD;;;EAvCiBW,gB;;8BAAdjB,K,uBAC0C;AAC5CC,EAAAA,KAAK,EAAEiB,mBAAUC;AAD2B,C;8BAD1CnB,K,kBAKuC;AACzCM,EAAAA,QAAQ,EAAE,EAD+B;AAEzCD,EAAAA,QAAQ,EAAE,KAF+B;AAGzCI,EAAAA,SAAS,EAAE;AAH8B,C;8BALvCT,K,kBAWgC;AAClCa,EAAAA,SAAS,EAAEK,mBAAUE;AADa,C;;eA+BvB,2BAAa,yBAAWpB,KAAX,CAAb,C","sourcesContent":["import React, { Component, HTMLAttributes } from 'react';\nimport PropTypes, { Requireable } from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Touch from '../Touch/Touch';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport withPlatform from '../../hoc/withPlatform';\nimport { isNumeric } from '../../lib/utils';\nimport Separator from '../Separator/Separator';\nimport { HasPlatform, HasInsets } from '../../types/props';\n\nexport interface PanelProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, HasInsets {\n  id: string;\n  separator?: boolean;\n  centered?: boolean;\n}\n\nexport interface PanelChildContext {\n  panel: Requireable<string>;\n}\n\nexport interface PanelContext {\n  hasTabbar: Requireable<boolean>;\n}\n\nclass Panel extends Component<PanelProps> {\n  static childContextTypes: PanelChildContext = {\n    panel: PropTypes.string,\n  };\n\n  static defaultProps: Partial<PanelProps> = {\n    children: '',\n    centered: false,\n    separator: true,\n  };\n\n  static contextTypes: PanelContext = {\n    hasTabbar: PropTypes.bool,\n  };\n\n  getChildContext() {\n    return {\n      panel: this.props.id,\n    };\n  }\n\n  render() {\n    const { className, centered, children, insets, platform, separator, ...restProps } = this.props;\n    const tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n\n    return (\n      <div {...restProps} className={classNames(getClassName('Panel', platform), className, {\n        'Panel--centered': centered,\n      })}>\n        <Touch className=\"Panel__in\" style={{\n          paddingBottom: isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null,\n        }}>\n          <div className=\"Panel__in-before\" />\n          {separator && <Separator className=\"Panel__separator\" />}\n          {centered ? <div className=\"Panel__centered\">{children}</div> : children}\n          <div className=\"Panel__in-after\" />\n        </Touch>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(withInsets(Panel));\n"],"file":"Panel.js"}