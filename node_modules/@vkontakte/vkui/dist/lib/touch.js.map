{"version":3,"sources":["../../src/lib/touch.ts"],"names":["coordX","e","clientX","touches","coordY","clientY","isClient","window","touchEnabled","getSupportedEvents","rubber","offset","dimension","resistanceRate","isAndroid","result","Math","abs"],"mappings":";;;;;;;;;AAGA;;;AAGA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD;AAAA,SAA+BA,CAAC,CAACC,OAAF,IAAaD,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACE,OAAF,CAAU,CAAV,EAAaD,OAAtE;AAAA,CAAf;AAEA;;;;;;;AAGA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACH,CAAD;AAAA,SAA+BA,CAAC,CAACI,OAAF,IAAaJ,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACE,OAAF,CAAU,CAAV,EAAaE,OAAtE;AAAA,CAAf;;;AAEA,IAAMC,QAAiB,GAAG,OAAOC,MAAP,KAAkB,WAA5C;AACA,IAAMC,YAAqB,GAAGF,QAAQ,IAAI,kBAAkBC,MAA5D;AAEA;;;;;;;;AAKA,SAASE,kBAAT,GAAwC;AACtC,MAAID,YAAJ,EAAkB;AAChB,WAAO,CAAC,YAAD,EAAe,WAAf,EAA4B,UAA5B,EAAwC,aAAxC,CAAP;AACD;;AAED,SAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,EAAsC,YAAtC,CAAP;AACD;AAED;;;;;AAGA,SAASE,MAAT,CAAgBC,MAAhB,EAAgCC,SAAhC,EAAmDC,cAAnD,EAA2EC,SAA3E,EAAuG;AACrG,MAAIA,SAAS,IAAIH,MAAM,GAAG,CAA1B,EAA6B;AAC3B,WAAOA,MAAP;AACD;;AAED,MAAMI,MAAM,GAAGF,cAAc,GAAGG,IAAI,CAACC,GAAL,CAASN,MAAT,CAAjB,GAAoCC,SAApC,IAAiDA,SAAS,GAAGC,cAAc,GAAGG,IAAI,CAACC,GAAL,CAASN,MAAT,CAA9E,CAAf;AACA,SAAOA,MAAM,GAAG,CAAT,GAAa,CAACI,MAAd,GAAuBA,MAA9B;AACD","sourcesContent":["export interface VKUITouchEvent extends MouseEvent, TouchEvent {}\nexport type VKUITouchEventHander = (e: VKUITouchEvent) => void;\n\n/*\n * Получает кординату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = (e: VKUITouchEvent): number => e.clientX || e.touches && e.touches[0].clientX;\n\n/*\n * Получает кординату по оси ординат из touch- или mouse-события\n */\nconst coordY = (e: VKUITouchEvent): number => e.clientY || e.touches && e.touches[0].clientY;\n\nconst isClient: boolean = typeof window !== 'undefined';\nconst touchEnabled: boolean = isClient && 'ontouchstart' in window;\n\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): string[] {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(offset: number, dimension: number, resistanceRate: number, isAndroid: boolean): number {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  const result = resistanceRate * Math.abs(offset) * dimension / (dimension + resistanceRate * Math.abs(offset));\n  return offset < 0 ? -result : result;\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"],"file":"touch.js"}